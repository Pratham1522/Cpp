WEEK 3:
    std::thread(C++11)
        -std::mutex
        -std::lock_guard
        -theory (race condition, join and detach)
        -synchronization
    std::variant(C++17)
        -visit
        -holds_alternative (std::get())

    std::optional<>(C++17)

    std::variadic_templates(C++11)
        [Templates + Recursion = variadic_template]
        benefits: it allows us to write function which can take
        a) data of any type 
        b) take any number of parameters from 0 to infinity!!

    std::fold_expression(C++17)
        -associativity (... is left to right or right to left)

    std::async,std::future,std::promise

    std::condition_variable
        -producer & consumer
        -notify(one vs all)
        -wait (wait, wait_until, wait_for)
    -ifinitializer (also works for switch statements)
    -structured binding 
    